#!/usr/bin/ruby
require 'rubygems'
require 'sinatra'
# Add the library from the source tree to the front of the load path.
# This allows ticgitweb to run without first installing a ticgit gem,
# which is important when testing multiple branches of development.
$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'lib/tget.rb'

get '/' do
  o=header('Status')+post_header
  #Show last 5 show torrents downloaded
  Tget::DList.load(File.expand_path("~/.downloaded_files"))
  o+=make_status_table(Tget::DList.dump)
  #Show non-debug output from last run.
  o+='  </body>
  </html>'
  o
end

get '/config' do
    extend Debug
    these_be_options Tget::Main.default_opts
    begin
header('List Shows')+post_header+make_shows_config_table(Tget::Config.load_config[:shows])+'
    </div>
  </body>
</html>'
  rescue 
    make_shows_config_table([])
  end
end

post '/delete_show' do
  #FIXME change :show to :title, and references
  header("Deleted #{params[:show]}")+post_header+
    "Deleting #{params[:show]}..."+(
  Tget::Config.del_show( params[:show] );
  'Done!')+make_shows_config_table(Tget::Config.load_config[:shows])
end

get '/new_show' do
  header("Added #{params[:title]}")+post_header+
    "Adding #{params[:title]}..."+(
  Tget::Config.add_show( params[:title] );
  'Done!')+make_shows_config_table(Tget::Config.load_config[:shows])
  #add params[:title] to the config file list of shows
end

def header title
  header= <<-eof
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
  <head>
    <meta content="text/html; charset=ISO-8859-1" http-equiv="content-type">
    <title>tget WebUI: #{title}</title>
    <style type="text/css">
span.name {
  font-weight: bold;
  font-size: 2em;
}
body {
  margin: 5px;
  padding: 0px;
  color: #333333;
  background-color: #dfdfdf;
  font-size: 8pt;
}
table.border {
  width: 100%;
  border: 0px solid #B2D0F8;
}
table.history_peek {
  background-color: #88C5F7;
}
div.history_peek_title {
  background-color: #058CFA;
  text-align: center;
  font-size: 9pt;
  font-weight: bold;
}
table.lr_output {
  background-color: #A2E0FA;
}
div.lr_output_title {
  background-color: #48C5FA
  text-align: center;
  font-size: 9pt;
  font-weight: bold;
}
span.command_links {
  margin: 0,0,5em;
  float: right;
  font-weight: bold;
  font-size: 9pt;
}
tr.lr_output {
  text-align: center;
}
    </style>
  </head>
  eof
header
end
def post_header 
h=<<-eof
  <body>
    <div class="header">
      <span class="command_links">
        <a href="/" >Status</a> 
        <a href="config" >Config</a>
      </span>
      <span class="name">Tget WebUI</span><br><small>version 0.0.1</small>
    </div>
eof
h
end
def make_shows_config_table shows
raise ArgumentError unless shows.class==Array
t_s=<<-eof
      <table class="border" align="center" cellpadding="20">
        <tr>
          <td>
            <table id="t1" align="center" cellpadding="4" cellspacing="0" border="5px">
eof
t_e=<<-eof
            </table>
          </td>
        </tr>
      </table>
eof
middle=''
shows.each {|show|
  middle+="
            <tr>
              <td width=\"50px\">
                <form name=\"delete_show\" action=\"delete_show\" method=\"post\">
                  <input type=\"hidden\" name=\"show\" value=\"#{show}\">
                  <input type=\"submit\" value=\"Delete\"></form>
              </td>
              <td width=\"100%\">#{show}</td>
              <td></td>
            </tr>\n"
}
middle+="\n
            <tr>
              <td width=\"50px\"></td>
              <td width=\"100%\">
                <form name=\"new show\" action=\"new_show\" method=\"get\">
                  <input type=\"text\" name=\"title\"\>
              </td>
              <td align=\"right\">
                <input type=\"submit\" value=\"Add\"></form>
              </td>
            </tr>\n"
t_s+middle+t_e
end
def make_status_table downloaded_files
  raise ArgumentError unless downloaded_files.class==Array
  t_s=<<-eof
        <table class="history_peek" align="center" cellpadding="1">
          <tr>
            <div class=\"history_peek_title\">Last 5 downloaded Releases:</div>
          </tr>
  eof
  t_e=<<-eof
        </table>
  eof
  middle=''
  count=0
  downloaded_files.reverse.each {|dl_f_line|
    next if count >= 5
    post_split= dl_f_line.split(DLIST_SEP)
    middle+="
              <tr>
                <td width=\"50%\" class=\"peek_show\">
                 #{post_split[0]} - #{post_split[1]}
                </td>
              </tr>"
    count+=1
  }
  #read output of last run
  middle+="
              <tr class=\"lr_output\">
                <table class=\"lr_output\" width=\"100%\">
                  <tr><div class=\"lr_output_title\">
                    Output of last run:
                    </div></tr>
                    <td><div class=\"lr_raw_output\"><pre>
  "
  if( file=(File.open(File.expand_path('/tmp/tget_last_run.txt'),'r') rescue nil) )
    while(line=file.gets)
      middle<<line
    end
  end
  file.close rescue nil
  middle+="
                    </pre></div></td>
                  </tr>
                </table>
              </tr>
  "
  t_s+middle+t_e
end
